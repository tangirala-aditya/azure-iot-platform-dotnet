trigger: none
pr: none
pool:
  vmImage: ubuntu-latest
stages:
  - stage: checkParameters
    displayName: Check parameters
    dependsOn: []
    jobs:
      - job: checkParameters
        displayName: Check parameters
        steps:
          - checkout: none

          - script: |-
              set -Eeuxo pipefail
              echo "Subscription name: '$(subscriptionName)'"
              if [ -z "$(subscriptionName)" ]
              then
                echo "A value for the 'subscriptionName' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Location name: '$(locationName)'"
              if [ -z "$(locationName)" ]
              then
                echo "A value for the 'locationName' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Environment name: '$(environmentName)'"
              if [ -z "$(environmentName)" ]
              then
                echo "A value for the 'environmentName' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Subscription ID: '$(subscriptionId)'"
              if [ -z "$(subscriptionId)" ]
              then
                echo "A value for the 'subscriptionId' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Application code: '$(applicationCode)'"
              if [ -z "$(applicationCode)" ]
              then
                echo "A value for the 'applicationCode' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Application short code: '$(applicationShortCode)'"
              if [ -z "$(applicationShortCode)" ]
              then
                echo "A value for the 'applicationShortCode' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Environment category: '$(environmentCategory)'"
              if [ -z "$(environmentCategory)" ]
              then
                echo "A value for the 'environmentCategory' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "Kubernetes version: '$(kubernetesVersion)'"
              if [ -z "$(kubernetesVersion)" ]
              then
                echo "A value for the 'kubernetesVersion' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "SendGrid email: '$(sendGridEmail)'"
              if [ -z "$(sendGridEmail)" ]
              then
                echo "A value for the 'sendGridEmail' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "System Admins: '$(sysAdmins)'"
              if [ -z "$(sysAdmins)" ]
              then
                echo "A value for the 'sysAdmins' variable must be provided in JSON format" > /dev/stderr
                exit 1
              fi

              echo "AKS agent VM size: '$(aksAgentVmSize)'"
              if [ -z "$(aksAgentVmSize)" ]
              then
                echo "A value for the 'aksAgentVmSize' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "TestPipelineRunId: '$(testPipelineRunId)'"
              if [ -z "$(testPipelineRunId)" ]
              then
                echo "A value for the 'testPipelineRunId' variable must be provided" > /dev/stderr
                exit 1
              fi

              echo "appInsightsLocation: '$(appInsightsLocation)'"
              if [ -z "$(appInsightsLocation)" ]
              then
                echo "A value for the 'appInsightsLocation' variable must be provided" > /dev/stderr
                exit 1
              fi

              telemetryStorageType=$(telemetryStorageType)
              echo "telemetryStorageType: $telemetryStorageType"
              if [ -z $telemetryStorageType ] || [ ${telemetryStorageType,,} != 'ade' ] && [ ${telemetryStorageType,,} != 'cosmosdb' ] && [ ${telemetryStorageType,,} != 'tsi' ]
              then
                echo "A value for the 'telemetryStorageType' variable must be provided and allowed values are ade, cosmosdb and tsi" > /dev/stderr
                exit 1
              fi

              echo "AADSGId: '$(aadSGId)'"
              if [ ${telemetryStorageType,,} == 'ade' ] && [ -z "$(aadSGId)" ]
              then
                echo "A value for the 'aadSGId'(ADD security group ID) variable must be provided" > /dev/stderr
                exit 1
              fi
            displayName: Check parameters

  - stage: deployInfrastructure
    displayName: Deploy infrastructure
    dependsOn:
      - checkParameters
    jobs:
      - template: ../templates/jobs-deploy-infra.yaml
        parameters:
          subscriptionName: $(subscriptionName)
          locationName: $(locationName)
          appInsightsLocation: $(appInsightsLocation)
          environmentName: $(environmentName)
          subscriptionId: $(subscriptionId)
          applicationCode: $(applicationCode)
          applicationShortCode: $(applicationShortCode)
          environmentCategory: $(environmentCategory)
          kubernetesVersion: $(kubernetesVersion)
          sendgridEmail: $(sendGridEmail)
          sysAdmins: $(sysAdmins)
          aksAgentVmSize: $(aksAgentVmSize)
          azureDevOpsProjectId: AzurePlatform
          testPipelineId: 453
          runVersion: specific
          testPipelineRunId: $(testPipelineRunId)
          isHelmVersion3: true
          aadSGId: $(aadSGId)
          telemetryStorageType: $(telemetryStorageType)