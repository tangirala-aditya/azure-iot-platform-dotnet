
trigger: none
pool:
  vmImage: ubuntu-latest
variables:
  - template: ../templates/variables-all.yaml
  - name: buildId
    value: build-$(Build.BuildId)
  - name: applicationCode
    value: acsagic
  - name: applicationShortCode
    value: acsagic
  - name: environmentCategory
    value: dev
  - name: subscriptionName
    value: Devops.azure3-Subscription
  - name: aksName
    value: $(applicationCode)-$(aksPartialName)-$(environmentCategory)
  - name: appConfigurationName
    value: $(applicationCode)-$(appConfigurationPartialName)-$(environmentCategory)
  - name: resourceGroupName
    value: $(resourceGroupPartialName)-iot-$(applicationShortCode)-$(environmentCategory)
  - name: storageAccountName
    value: $(applicationCode)$(storageAccountPartialName)$(environmentCategory)
  - name: tableStorageName
    value: pipeline
  - name: tableStoragePartition
    value: test
  - name: tableStorageRowKeyPrefix
    value: "$(buildId):"
  - name: kubernetesNamespaceWasCreatedRowKey
    value: kubernetesNamespaceWasCreated
  - name: mmmIotPlatformServicesHelmChartWasInstalledRowKey
    value: mmmIotPlatformServicesHelmChartWasInstalled
  - name: mmmIotPlatformIngressHelmChartWasInstalledRowKey
    value: mmmIotPlatformIngressHelmChartWasInstalled
  - name: tableStorageAppConfigurationConnectionStringRowKey
    value: appConfigurationConnectionString
  - name: kubernetesNamespace
    value: $(buildId)
  - name: dockerfile
    value: Dockerfile
  - name: helmVersion
    value: $(helmVersion2)
  - name: mmmIotPlatformServicesHelmChartName
    value: mmm-iot-platform-services
  - name: mmmIotPlatformIngressHelmChartName
    value: mmm-iot-platform-ingress
  - name: publishedFilesArtifactName
    value: publishFiles
  - name: functionsArtifactName
    value: functionsFiles
  - name: webuiArtifactName
    value: webuiFiles
  - name: helmInstallTimeoutInSeconds
    value: 1000
  - name: grafanaImage
    value: docker.io/azureiot3m/grafana-custom:latest    
  - name: mmmIotPlatformServicesHelmChartValuesFile
    value: pipelines/ci/mmm-iot-platform-chart-values.yaml
  - name: mmmIotPlatformServicesHelmChartReleaseName
    value: services-$(buildId)
  - name: mmmIotPlatformIngressHelmChartReleaseName
    value: ingress-$(buildId)
  - name: commitsSinceLastReleaseArtifactName
    value: commitsSinceLastRelease 
  
stages:
  - stage: build
    displayName: Build
    dependsOn: []
    jobs:
      - job: preBuild
        displayName: Pre-build
        steps:
          - checkout: none

          - task: AzureCLI@2
            displayName: Get App Configuration connection string
            name: getAppConfigurationConnectionString
            inputs:
              azureSubscription: $(subscriptionName)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |-
                $appConfigurationConnectionString = "Endpoint=https://acshyd-appconfig-dev.azconfig.io;Id=GYCS-l4-s0:MFR+WNIgDpva5VAfDYPP;Secret=hc1mnHRNECprwxNlBi2WwftqQizq19Gi9dyReLf+P6E="
                echo "##vso[task.setvariable variable=AppConfigurationConnectionString;isOutput=true]$appConfigurationConnectionString"

      - job: codeQl
        displayName: Code Scanning using CodeQL
        dependsOn:
          - preBuild
        variables:
          AppConfigurationConnectionString: $[dependencies.preBuild.outputs['getAppConfigurationConnectionString.appConfigurationConnectionString']]
        steps:
          - checkout: self
            displayName: Checkout repository

          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '3.1.x'
              includePreviewVersions: true

          - script: |
              wget https://github.com/github/codeql-action/releases/latest/download/codeql-runner-linux
              chmod +x codeql-runner-linux
            displayName: 'Get latest CodeQL package. Install on Agent.'

          - task: CmdLine@1
            displayName: CodeQL Initialization
            inputs:
                script: "./codeql-runner-linux init  --languages csharp --repository tangirala-aditya/azure-iot-platform-dotnet --github-url https://github.com --github-auth $(GITHUB_PAT_TOKEN) "

          - script: >-
              dotnet restore
              --force
              --no-cache
              --no-dependencies
              --packages .nuget
              --runtime $(dotnetProductionRuntimeId)
              /p:TargetLatestRuntimePatch=true
              /p:OutDir=$(Build.ArtifactStagingDirectory) 
              /p:UseSharedCompilation=false
            displayName: Restore dependencies

          - script: >-
              dotnet publish
              --self-contained false
              --no-restore
              --no-dependencies
              --configuration $(dotnetBuildConfiguration)
              --runtime $(dotnetProductionRuntimeId)
              /p:TargetLatestRuntimePatch=true
              /p:OutDir=$(Build.ArtifactStagingDirectory)
              /p:UseSharedCompilation=false
            displayName: Build assemblies

          - task: PowerShell@1
            displayName: Set CodeQL Environment Variables
            inputs:
                targetType: inline
                script: >
                    $json = Get-Content $(System.DefaultWorkingDirectory)/codeql-runner/codeql-env.json | ConvertFrom-Json
                    $json.PSObject.Properties | ForEach-Object {
                        $template = "##vso[task.setvariable variable="
                        $template += $_.Name
                        $template += "]"
                        $template += $_.Value
                        echo "$template"
                    }
          - task: CmdLine@2
            displayName: CodeQL Analyze
            inputs:
                script: './codeql-runner-linux analyze --repository tangirala-aditya/azure-iot-platform-dotnet --github-url https://github.com --github-auth $(GITHUB_PAT_TOKEN) --commit 4be551e61f892eda4a955431e68294f6ce5446e0 --ref ref/head/codeql-report-generation'
