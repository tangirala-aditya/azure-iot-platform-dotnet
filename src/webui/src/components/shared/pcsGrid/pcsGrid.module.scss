@import 'src/styles/variables';
@import 'src/styles/mixins';
@import 'src/styles/themes';

// Variable overrides
$selectedRowBorderWidth: 4px;
$rowBorderHeight: $grid-size;
$rowLineHeight: 12*$grid-size; // fluent management-list-row-height
$rowHeight: $rowLineHeight + 2*$rowBorderHeight;
$headerResizeHeight: 18px;

$pageTitleHeight: 85px;
$refreshBarHeight: 16px;
$font-family: $font-family-default;
$icons-path: "~ag-grid-community/src/styles/icons/";
$row-height: $rowHeight;
$header-height: $rowHeight;
$background-color: transparent;
$tab-background-color: transparent;
$odd-row-background-color: transparent;
$border-color: transparent;
$panel-background-color: transparent;
$tool-panel-background-color: transparent;
$card-background-color: transparent;
$cell-highlight-border: transparent;
$cell-horizontal-border: transparent;
$header-background-color: transparent;

@import 'node_modules/ag-grid-community/dist/styles/ag-grid.scss';
@import 'node_modules/ag-grid-community/dist/styles/ag-theme-alpine/sass/ag-theme-alpine-mixin';

$doublePadding: $baseContentPadding * 2;
.pcs-grid-container{
  &:global(.ag-theme-alpine) {
    height: calc(100% - #{$pageTitleHeight} - #{$refreshBarHeight});
    position: relative;
    flex-shrink: 0;

    > .pcs-grid-loading-container {
      display: flex;
      align-content: center;
      justify-content: center;
      @include rem-fallback(padding, 20px 0px);

      // When the grid loader is visible, we don't want to show the
      // grid but we don't want to destroy the element either and
      // pay the initialization cost again. With these styles we hide
      // the grid when the loader is present.
      & + div {
        visibility: hidden; // Using visibility so AgGrid can autoSizeColumns correctly
        height: 1px; // Height at 1px to avoid issues with a full grid creating ghost scroll effects
      }
    }

    :global(.ag-header-cell) {
      @include rem-font-size($font-size-small);

      :global(.ag-icon) { cursor: auto; }
    }

    &.movable-columns :global(.ag-header-cell):not(:global(.checkbox-column)) { cursor: move; }

    :global(.ag-unselectable) {
      user-select: initial;
      -moz-user-select: text;
      -ms-user-select: text;
      -webkit-user-select: text;
    }

    :global(.ag-row) {
      margin-bottom: 0;

      :global(.ag-cell) {
        outline: none;
        border: none;
        @include rem-fallback(line-height, $rowLineHeight);
      }

    }

    :global(.ag-paging-button) { cursor: pointer; }

    @include themify($themes) {

      :global(.ag-root-wrapper) {
        background-color: themed('color-bg-table');

        :global(.ag-header-cell-moving) {
        background-color: themed('colorGridRowSelectedBackground');
        color: themed('colorGridCellText');
      }

      :global(.ag-header-viewport) {
          background-color: themed('color-bg-table');
        
          :global(.ag-header-cel)l {
          color: themed('colorGridCellText');
        
          :global(.ag-icon-none) {
            visibility: hidden;
            opacity: 0;
            transition: visibility 0s, opacity 0.5s linear;
          }
        
          :global(.ag-icon-asc) { color: themed('colorGridCellText') }
          :global(.ag-icon-desc) { color: themed('colorGridCellText') }
        
          &:hover {
            :global(.ag-icon-none):not(:global(.ag-hidden)) {
              visibility: visible;
              opacity: 1;
            }
          }
        }
      }
    
      :global(.ag-row) {
          background-color: themed('color-bg-table');
        
          // ag-grid doesn't really support row separators, so to emulate the fluent styling,
          // add a big vertical border with the page content background color:
        
          // Uncomment for lines separate items
          // padding-top: $rowBorderHeight;
          // border-top: 1px solid lightgrey;
        
          border-top: $rowBorderHeight solid themed('color-bg-content');
          border-bottom: $rowBorderHeight solid themed('color-bg-content');
        
          :global(.ag-cell) { color: themed('colorGridCellText'); }
        }
      
        :global(.ag-paging-panel) {
          background-color: themed('color-bg-table');
          border-top: $rowBorderHeight solid themed('color-bg-content');
          color: themed('colorGridHeaderText');
        
          :global(.ag-paging-button) {
            border: none;
            background-color: transparent;
            color: themed('colorGridHeaderText');
          
            &:hover {
              color: themed('colorGridCellText');
            }
          }
        }
      }
    }
  }
}

.flex-container {
  display: flex;
  margin-bottom: 5px;
}

.flex-child {
  flex: 1;
}

.flex-child:last-child {
  display: flex;
  justify-content: flex-end;
}

:global(.ms-Button).expand-columns {
  @include themify($themes) {
    color: themed('colorContentText');
    
    &:hover {
      color: rgb(0, 120, 212);
    }
  }
}